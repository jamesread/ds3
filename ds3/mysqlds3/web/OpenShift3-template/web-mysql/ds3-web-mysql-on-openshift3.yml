apiVersion: v1
kind: Template
metadata:
  name: ds3-web-mysql-on-openshift3
  annotations:
    description: "DS3 Web interface and MySQL on OpenShift 3"
    tags: "instant-app"
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: ${APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: ${APP_NAME}
  spec:
    triggers:
      - type: ImageChange
      - type: ConfigChange
    source:
      type: Git
      git:
        uri: https://github.com/dmesser/ds3-on-openshift.git
        ref: no-data-files
      contextDir: "ds3/mysqlds3/web/php5"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: "php:5.6"
          namespace: openshift
    output:
      to:
        kind: ImageStreamTag
        name: ${APP_NAME}:latest
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: ${APP_NAME}-php-config
  data:
    php.ini: |-
      error_reporting = E_ALL ^ (E_DEPRECATED)
      display_errors = On
      mysql.default_host = ${APP_NAME}-database
      mysql.default_user = ds3
      mysql.default_password = ${MYSQL_PASSWORD}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APP_NAME}
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}
    template:
      metadata:
        labels:
          deploymentconfig: ${APP_NAME}
        name: ${APP_NAME}
      spec:
        containers:
        - name: ${APP_NAME}
          image: ' '
          ports:
            - containerPort: 8080
              protocol: TCP
          imagePullPolicy: Always
          lifecycle:
            postStart:
              exec:
                command:
                  - /usr/bin/ln
                  - '-s'
                  - /phphack/php.ini
                  - /etc/opt/rh/rh-php56/php.d/phphack.ini
          volumeMounts:
            - mountPath: /phphack/
              name: volume-phphack
        volumes:
          - configMap:
              name: ${APP_NAME}-php-config
              defaultMode: 420
            name: volume-phphack
        resources:
          limits:
            memory: ${DS3_MEMORY_LIMIT}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APP_NAME}
        from:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${APP_NAME}-database",
        "kind": "Service"}]'
    name:  ${APP_NAME}
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        targetPort: 8080
        protocol: TCP
    selector:
      deploymentconfig: ${APP_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: ${APP_NAME}
  spec:
    host: ${APPLICATION_DOMAIN}
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: ${APP_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name:  ${APP_NAME}-database
  spec:
    replicas: 1
    selector:
      deploymentconfig: ${APP_NAME}-database
    template:
      metadata:
        labels:
          deploymentconfig: ${APP_NAME}-database
      spec:
        containers:
        - name: mysql
          env:
            - name: MYSQL_USER
              value: "ds3"
            - name: MYSQL_PASSWORD
              value: "${MYSQL_PASSWORD}"
            - name: MYSQL_ROOT_PASSWORD
              value: "${MYSQL_PASSWORD}"
            - name: MYSQL_DATABASE
              value: "DS3"
          image: ' '
          resources:
            limits:
              memory: ${MYSQL_MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/mysql/data
            name: ${APP_NAME}-database-storage
          - mountPath: /tmp/data
            name: ${APP_NAME}-sample-data
        volumes:
        - name: ${APP_NAME}-database-storage
          persistentVolumeClaim:
            claimName: ${APP_NAME}-database-storage
        - name: ${APP_NAME}-sample-data
          persistentVolumeClaim:
            claimName: ${SAMPLE_DATA_PVC}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mysql
        from:
          kind: ImageStreamTag
          name: mysql:5.7
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    name: ${APP_NAME}-database
  spec:
    ports:
      - name: mysql
        port: 3306
        protocol: TCP
        targetPort: 3306
    selector:
      deploymentconfig: ${APP_NAME}-database
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${APP_NAME}-database-storage
  spec:
    storageClassName: ${STORAGE_CLASS}
    accessModes:
      - "ReadWriteOnce"
    resources:
      requests:
        storage: ${MYSQL_VOLUME_CAPACITY}
parameters:
- name: MYSQL_PASSWORD
  value: toomanysecrets
- description: The name assigned to all of the frontend objects defined in this template.
  displayName: Name
  name: APP_NAME
  required: true
  value: ds3-mysql-web
- description: The exposed hostname that will route to the DS3 app.
  displayName: Application Hostname
  name: APPLICATION_DOMAIN
- description: The size of the volume for MySQL data files.
  displayName: MySQL Volume Capacity
  name: MYSQL_VOLUME_CAPACITY
  required: true
  value: 10Gi
- description: Maximum amount of memory the MySQL container can use.
  displayName: MySQL Memory Limit
  name: MYSQL_MEMORY_LIMIT
  required: true
  value: 1Gi
- description: Maximum amount of memory the DS3 container can use.
  displayName: DS3 App Memory Limit
  name: DS3_MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The StorageClass to use to request the volume
  displayName: StorageClass for MySQL backend
  name: STORAGE_CLASS
  required: true
  value: glusterfs-storage
- description: Existing PersistentVolumeClaim to mount to MySQL on /tmp/sampledata
  displayName: Sample Data PVC
  name: SAMPLE_DATA_PVC
  required: true
  value: sample-data
